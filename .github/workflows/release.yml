name: Release

on:
  release:
    types: [created]

jobs:
  build:
    permissions: write-all
    name: Build ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - name: Linux
            os: ubuntu-20.04
            ext: ""
            runtime: linux-x64
            build: linux
            vars: CXX="g++"
            setup: |
              sudo apt-get update
              sudo apt-get install ninja-build cmake
              ninja --version
              cmake --version
              gcc --version
          - name: Windows
            os: windows-latest
            ext: .exe
            runtime: win-x64
            setup: |
              choco install ninja cmake
              ninja --version
              cmake --version

    env:
      proj: "NxEditor"

    steps:
      - uses: actions/checkout@master
        with:
          submodules: recursive

      - name: Install Dependencies
        run: ${{ matrix.config.setup }}

      - name: Configure Cead
        shell: bash
        run: |
          mkdir ./lib/Cead/native/build
          ${{ matrix.config.vars }} \
          cmake --no-warn-unused-cli \
            -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE \
            -DCMAKE_BUILD_TYPE:STRING=Release \
            -S ./lib/Cead/native \
            -B ./lib/Cead/native/build/${{ matrix.config.build }} \
            -G "Ninja"

      - name: Build Cead
        shell: bash
        run: |
          cmake --build ./lib/Cead/native/build/${{ matrix.config.build }} --config Release --target all -j 4

      - name: Configure NativeIO
        shell: bash
        run: |
          mkdir ./lib/cs-msbt/lib/NativeIO/native/build
          ${{ matrix.config.vars }} \
          cmake --no-warn-unused-cli \
            -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE \
            -DCMAKE_BUILD_TYPE:STRING=Release \
            -S ./lib/cs-msbt/lib/NativeIO \
            -B ./lib/cs-msbt/lib/NativeIO/native/build \
            -G "Ninja"

      - name: Build NativeIO
        shell: bash
        run: |
          cmake --build ./lib/cs-msbt/lib/NativeIO/native/build/${{ matrix.config.build }} --config Release --target all -j 4

      - name: Configure cs-msbt
        shell: bash
        run: |
          mkdir ./lib/cs-msbt/native/build
          ${{ matrix.config.vars }} \
          cmake --no-warn-unused-cli \
            -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE \
            -DCMAKE_BUILD_TYPE:STRING=Release \
            -S ./lib/cs-msbt/lib/native \
            -B ./lib/cs-msbt/lib/native/build/${{ matrix.config.build }} \
            -G "Ninja"

      - name: Build cs-msbt
        shell: bash
        run: |
          cmake --build ./lib/cs-msbt/native/build/${{ matrix.config.build }} --config Release --target all -j 4

      - name: Install DotNET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "7.0.x"

      - name: Publish NX-Editor
        shell: bash
        run: |
          dotnet publish src/${{ env.proj }}/${{ env.proj }}.csproj \
          -r ${{ matrix.config.runtime }} \
          -c Release \
          --sc false \
          --version-suffix ${{ github.event.release.tag_name }} \
          -o ${{ matrix.config.name }} \
          -p:Version=${{ github.event.release.tag_name }} \
          -p:PublishSingleFile=true \
          -p:IncludeNativeLibrariesForSelfExtract=true \
          -p:PublishReadyToRun=true

      - name: Upload artifacts
        uses: Shopify/upload-to-release@v1.0.1
        with:
          name: NX-Editor-${{ github.event.release.tag_name }}${{ matrix.config.ext }}
          path: ${{ matrix.config.name }}/${{ env.proj }}${{ matrix.config.ext }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
